<launch>
  <!-- Gazebo Init -->
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="world_name" default="example.world" />
  <arg name="vehicle_name" default="e4" />
  <arg name="scene_name" default="$(eval arg('world_name').split('.world')[0])" />
  <arg name="custom_scene" default="false" />
  <!-- Define a condition for highbay world -->
  <arg name="is_highbay" default="$(eval arg('world_name') == 'highbay_track.world')" />
  <!-- Define RViz config suffix based on world -->
  <arg name="rviz_suffix" default="$(eval '_high_bay' if arg('is_highbay') else '')" />
  <!-- Set velodyne flag -->
  <arg name="velodyne_points" default="false" />
  <!-- Select appropriate RViz config -->
  <arg name="rviz_config" default="$(eval 'gem_velodyne' if arg('velodyne_points') else 'gem_' + arg('vehicle_name') + arg('rviz_suffix'))" />

  <!-- Vehicle & scene parameters -->
  <arg name="vehicle_name"  default="e2"/>
  <arg name="x"             default="0"/>
  <arg name="y"             default="0"/>
  <arg name="yaw"           default="0.0"/>

  <!-- Custom scene toggle -->
  <arg name="custom_scene"  default="false"/>
  <arg name="scene_name"    default="$(eval arg('world_name').split('.world')[0])"/>

  <!-- Empty Gazebo world (inherits args above) -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug"        value="$(arg debug)"/>
    <arg name="gui"          value="$(arg gui)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless"     value="$(arg headless)"/>
    <arg name="verbose"      value="false"/>
    <arg name="world_name"   value="$(find gem_gazebo)/worlds/$(arg world_name)"/>
  </include>

  <!-- Spawn the GEM Car -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="yaw" default="0.0" />

  <include file="$(find gem_gazebo)/launch/gem_vehicle.launch">
    <arg name="x"            value="$(arg x)"/>
    <arg name="y"            value="$(arg y)"/>
    <arg name="yaw"          value="$(arg yaw)"/>
    <arg name="vehicle_name" value="$(arg vehicle_name)"/>
  </include>

  <!-- YAML path used by both nodes -->
  <arg name="scene_yaml"
       default="$(find gem_gazebo)/scenes/$(arg scene_name).yaml"/>

  <!-- Static objects -->
  <node pkg="gem_gazebo"
        type="spawn_objects.py"
        name="spawn_static_objects"
        output="screen"
        if="$(arg custom_scene)">
    <param name="yaml_path" value="$(arg scene_yaml)"/>
  </node>

  <!-- Moving agents -->
  <node pkg="gem_gazebo"
        type="spawn_agents.py"
        name="spawn_moving_agents"
        output="screen"
        if="$(arg custom_scene)">
    <param name="yaml_path" value="$(arg scene_yaml)"/>
  </node>
  
  <!-- INSNavGeod Publisher Node: Combines IMU and GPS data -->
  <node pkg="gem_gazebo" type="insnavgeod_publisher.py" name="insnavgeod">
    <param name="vehicle_name" value="gem_$(arg vehicle_name)" />
  </node>
  
  <!-- RViz with appropriate config -->
  <node name="rviz" pkg="rviz" type="rviz"
    args="-d $(find gem_launch)/config_rviz/$(arg rviz_config).rviz" />

  <!-- GNSS Image node - only runs in highbay world -->
  <node name="gem_gnss_image_node" pkg="gem_gazebo" type="gem_gnss_image.py" if="$(arg is_highbay)">
    <param name="vehicle_name" value="gem_$(arg vehicle_name)" />
  </node>

</launch>
