services:
  ros1-noetic:
    image: ros-noetic-image
    container_name: ros-noetic-container
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER: ${USER}
        USER_UID: ${UID:-1000}  # Pass host UID
        USER_GID: ${GID:-1000}  # Pass host GID
    stdin_open: true
    tty: true
    volumes:
      - "/etc/group:/etc/group:ro"
      - "/etc/passwd:/etc/passwd:ro"
      - "/etc/shadow:/etc/shadow:ro"
      - "/etc/sudoers.d:/etc/sudoers.d:ro"
      - "${HOME}:/home/${USER}/host"
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      - "/dev/shm:/dev/shm"
    environment:
      - DISPLAY=${DISPLAY}
      - USER=${USER}
      - UID=${UID:-1000}
      - GID=${GID:-1000}
      # - LIBGL_ALWAYS_SOFTWARE=1 # Uncomment if you want to use software rendering (No GPU)
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-all}
    network_mode: host
    ipc: host
    user: "${UID:-1000}:${GID:-1000}"
    # Comment the following lines if you don't want to use Nvidia GPU
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all # alternatively, use `count: all` for all GPUs
              capabilities: [gpu]

